@model br.com.fiap.alert.ViewModel.AlertPaginacaoViewModel

<h1>Alert</h1>

@if (!string.IsNullOrEmpty((String)TempData["mensagemSucesso"]))
{
        <div class="alert alert-warning" role="alert">@TempData["mensagemSucesso"]</div>
}

@if (!string.IsNullOrEmpty((String)TempData["mensagemSucesso2"]))
{
        <div class="alert alert-warning" role="alert">@TempData["mensagemSucesso2"]</div>
}

<p>
    <!-- uso de TagHelpers para definir o Controller e a Action -->
    <a asp-controller="Alert" asp-action="Create">New Alert</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>AlertId</th>
            <th>TypeAlert</th>
            <th>Message</th>
            <th>Coords</th>
            <th>Author</th>
            <th></th> <!-- Coluna para ações -->
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Alerts)
        {
                <tr>
                    <td>
                        <label>@item.AlertId</label>
                    </td>
                    <td>
                        <label>@item.TypeAlert</label>
                    </td>
                    <td>
                        <label>@item.Message</label>
                    </td>
                    <td>
                        <label>@item.Coords</label>
                    </td>
                    <td>
                        <label>@item.Author</label>
                    </td>

                    <td>
                        <!-- asp-route-id é usado para informar o Id do Item selecionado. -->
                        <a asp-controller="Alert"
                           asp-action="Edit"
                           asp-route-id="@item.AlertId">Editar</a>
                        <a asp-controller="Alert"
                           asp-action="Detail"
                           asp-route-id="@item.AlertId">Consultar</a>
                        <a asp-controller="Alert"
                           asp-action="Delete"
                           asp-route-id="@item.AlertId">Excluir</a>
                    </td>
                </tr>
        }
    </tbody>
</table>

@if (Model != null && Model.TotalPages > 0)
{
        <nav aria-label="Page navigation">
            <ul class="pagination d-flex justify-content-center">
            @if (Model.HasPreviousPage)
            {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("IndexPaginated", new { pagina = Model.CurrentPage - 1, tamanhoPagina = Model.PageSize })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("IndexPaginated", new { pagina = i, tamanhoPagina = Model.PageSize })">@i</a>
                        </li>
            }

            @if (Model.HasNextPage)
            {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("IndexPaginated", new { pagina = Model.CurrentPage + 1, tamanhoPagina = Model.PageSize })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
            }
            </ul>
        </nav>
}